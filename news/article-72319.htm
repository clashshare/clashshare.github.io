<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashshare.github.io/news/article-72319.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Spring Cloud Feign 请求添加headers</title>
        <meta name="description" content="目录  方案一：方法上的@RequestMapping注解添加headers信息 方案二：接口上的@RequestMapping注解添加headers信息 方案三：使用@Headers注解添加head" />
        <link rel="icon" href="/assets/website/img/clashshare/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashShare节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashshare.github.io/news/article-72319.htm" />
    <meta property="og:site_name" content="ClashShare节点分享站" />
    <meta property="og:title" content="Spring Cloud Feign 请求添加headers" />
    <meta property="og:image" content="https://clashshare.github.io/uploads/20240525/bc62aa135a49ff90429edafff38640da.webp" />
        <meta property="og:release_date" content="2025-03-12T06:08:44" />
    <meta property="og:updated_time" content="2025-03-12T06:08:44" />
        <meta property="og:description" content="目录  方案一：方法上的@RequestMapping注解添加headers信息 方案二：接口上的@RequestMapping注解添加headers信息 方案三：使用@Headers注解添加head" />
        
    <link href="//fonts.googleapis.com/css2?family=Nunito:ital,wght@0,300;0,400;0,600;0,700;0,800;1,300&display=swap" rel="stylesheet">
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/clashshare/style-starter.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Cloud Feign 请求添加headers">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JXCB90C85R"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JXCB90C85R');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--/header-w3l-->
    <div class="header-w3l">
        <!-- header -->
        <header id="site-header" class="fixed-top">
            <div class="container">
                <nav class="navbar navbar-expand-lg stroke">
                                        <a class="navbar-brand" href="/">
                        Clash Share                    </a>
                                        <!-- if logo is image enable this   
            <a class="navbar-brand" href="#index.html">
                <img src="image-path" alt="Your logo" title="Your logo" style="height:35px;" />
            </a> -->
                    <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                        <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                        </span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                        <ul class="navbar-nav ml-lg-auto">
                                                        <li class="nav-item">
                                <a class="nav-link" href="/">首页</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/free-nodes/">免费节点</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/client.htm">客户端</a>
                            </li>
                                                        <li class="nav-item">
                                <a class="nav-link" href="/news/">新闻资讯</a>
                            </li>
                                                    </ul>
                    </div>
                    <!-- toggle switch for light and dark theme -->
                    <div class="mobile-position">
                        <nav class="navigation">
                            <div class="theme-switch-wrapper">
                                <label class="theme-switch" for="checkbox">
                                    <input type="checkbox" id="checkbox">
                                    <div class="mode-container">
                                        <i class="gg-sun"></i>
                                        <i class="gg-moon"></i>
                                    </div>
                                </label>
                            </div>
                        </nav>
                    </div>
                    <!-- //toggle switch for light and dark theme -->
                </nav>
            </div>
        </header>
        <!-- //header -->
    </div>
    <!--//header-w3l-->
    <!--/w3l-inner-page-breadcrumb-->
    <section class="w3l-inner-page-breadcrumb">
        <div class="breadcrumb-bg py-5">
            <div class="container pt-lg-5 pt-md-3 p-lg-4 pb-md-3 my-lg-3">
                <h2 class="title pt-5">Spring Cloud Feign 请求添加headers</h2>
                <ul class="breadcrumbs-custom-path mt-3 text-center">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/">
                        <span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 新闻资讯</a>
                    </li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- /w3l-content-2-->
    <div class="w3l-content-2 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <div class="toc"> <h3>目录</h3> <ul> <li><a href="#RequestMappingheaders_2" rel="nofollow">方案一：方法上的@RequestMapping注解添加headers信息</a></li> <li><a href="#RequestMappingheaders_14" rel="nofollow">方案二：接口上的@RequestMapping注解添加headers信息</a></li> <li><a href="#Headersheaders_25" rel="nofollow">方案三：使用@Headers注解添加headers信息</a></li> <li><a href="#RequestInterceptorheaders_37" rel="nofollow">方案四：自定义RequestInterceptor添加headers信息</a></li> <li><a href="#RequestInterceptorheader_56" rel="nofollow">方案五：自定义RequestInterceptor实现添加动态数据到header</a></li> </ul> </div> </h1> <p>@RequestMapping注解的属性中包含一个headers数组，所以尝试使用，在指定的方法上@RequestMapping注解中添加需要的headers，可以是写死的，也可以读取配置，测试是有效的</p> <p>同理@RequestMapping一组的@PostMapping，@GetMapping注解等均适用</p> <pre><code class="prism language-bash">@FeignClient<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"server"</span>,url<span class="token operator">=</span><span class="token string">"127.0.0.1:8080"</span><span class="token punctuation">)</span> public interface FeignTest<span class="token punctuation">{<!-- --></span>     @RequestMapping<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/test"</span>,headers<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token string">"app=test-app"</span>,<span class="token string">"token=<span class="token variable">${test-app.token}</span>"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>     String test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> </h1> <p>针对单个方法可以在方法上的@RequestMapping注解中添加headers，如果同一个接口中所有的方法都需要同样的headers时在方法上加就比较繁琐了，可以在接口上的@RequestMapping注解中添加headers，使整个接口的方法均被添加同样的headers</p> <pre><code class="prism language-bash">@FeignClient<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"server"</span>,url<span class="token operator">=</span><span class="token string">"127.0.0.1:8080"</span><span class="token punctuation">)</span> @RequestMapping<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/"</span>,headers<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token string">"app=test-app"</span>,<span class="token string">"token=<span class="token variable">${test-app.token}</span>"</span><span class="token punctuation">}</span><span class="token punctuation">)</span> public interface FeignTest<span class="token punctuation">{<!-- --></span>     @RequestMapping<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/test"</span><span class="token punctuation">)</span>     String test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> </h1> <pre><code class="prism language-bash">@FeignClient<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"server"</span>,url<span class="token operator">=</span><span class="token string">"127.0.0.1:8080"</span><span class="token punctuation">)</span> @Headers<span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token string">"app: test-app"</span>,<span class="token string">"token:<span class="token variable">${test-app.token}</span>"</span><span class="token punctuation">}</span><span class="token punctuation">)</span> public interface FeignTest<span class="token punctuation">{<!-- --></span>     @RequestMapping<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/test"</span><span class="token punctuation">)</span>     String test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>查看openfeign官方文档发现其使用的是@Headers来添加headers，测试发现并没有生效，spring cloud使用了自己的SpringMvcContract来解析注解，所以需要自己实现一个Contract来实现对@Headers注解的支持，具体实现参照https://juejin.im/post/6844903961653149709</p> </h1> <p>feign提供了一个拦截器接口RequestInterceptor，实现RequestInterceptor接口就可以实现对feign请求的拦截，接口提供了一个方法apply()，实现apply()方法</p> <pre><code class="prism language-bash">@Component public class FeignRequestInterceptor implements RequestInterceptor<span class="token punctuation">{<!-- --></span>      @Value<span class="token punctuation">(</span><span class="token string">"<span class="token variable">${test-app.token}</span>"</span><span class="token punctuation">)</span>     private String token<span class="token punctuation">;</span>          @Override     public void apply<span class="token punctuation">(</span>RequestTemplate requestTemplate<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         requestTemplate.header<span class="token punctuation">(</span><span class="token string">"app"</span>,<span class="token string">"test-app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//静态         requestTemplate.header<span class="token punctuation">(</span><span class="token string">"token"</span>,token<span class="token punctuation">)</span><span class="token punctuation">;</span>//读配置<span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>实现apply()方法直接添加header会拦截所有的请求都加上headers，如果不是所有的feign请求都需要用到不建议此方法</p> </h1> <p>以上方案都不适合把动态的数据放入headers中，而通常场景下可能经常需要把计算的签名，用户id等动态信息设置到headers，所以还需要一个更加完善的方案。方案1/2/3均不能设置动态的值，方案4可以设置动态值，但是没做到请求的区分，所以在方案4的基础上进行改进得到了较为完善的方案5。具体实现如下：</p> <p>在请求调用代码中，获取到HttpServletRequest对象，将需要添加到headers中的值封装成一个map后放入HttpServletRequest的attribute域中</p> <pre><code class="prism language-bash">ServletRequestAttributes attributes<span class="token operator">=</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span> RequestContextHolder.getRequestAttributes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> HttpServletRequest request<span class="token operator">=</span> Objects.requireNonNull<span class="token punctuation">(</span>attributes<span class="token punctuation">)</span>.getRequest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> String signedMsg<span class="token operator">=</span> getSignedMsg<span class="token punctuation">(</span>reqJson<span class="token punctuation">)</span><span class="token punctuation">;</span> // 计算签名字符串 Map<span class="token operator">&lt;</span>String, String<span class="token operator">&gt;</span> reqMap<span class="token operator">=</span> new HashMap<span class="token operator">&lt;&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> reqMap.put<span class="token punctuation">(</span><span class="token string">"content-type"</span>,<span class="token string">"application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//常量字段 reqMap.put<span class="token punctuation">(</span><span class="token string">"accessKey"</span>, accessKey<span class="token punctuation">)</span><span class="token punctuation">;</span>//常量字段 reqMap.put<span class="token punctuation">(</span><span class="token string">"signedMsg"</span>, signedMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>//动态计算/获取字段 request.setAttribute<span class="token punctuation">(</span><span class="token string">"customizedRequestHeader"</span>, reqMap<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>在自定义RequestInterceptor中获取到HttpServletRequest对象的attribute域中指定的key，将key对应map中的所有参数加入到headers。</p> <pre><code class="prism language-bash">@Component public class FeignRequestInterceptor implements RequestInterceptor<span class="token punctuation">{<!-- --></span>      @Override     public void apply<span class="token punctuation">(</span>RequestTemplate requestTemplate<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         ServletRequestAttributes attributes<span class="token operator">=</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span> RequestContextHolder.getRequestAttributes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         HttpServletRequest request<span class="token operator">=</span> attributes.getRequest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          // 设置自定义header         // 设置request中的attribute到header以便转发到Feign调用的服务         Enumeration<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> reqAttrbuteNames<span class="token operator">=</span> request.getAttributeNames<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>reqAttrbuteNames<span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">while</span><span class="token punctuation">(</span>reqAttrbuteNames.hasMoreElements<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">{<!-- --></span>                 String attrName<span class="token operator">=</span> reqAttrbuteNames.nextElement<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">"customizedRequestHeader"</span>.equalsIgnoreCase<span class="token punctuation">(</span>attrName<span class="token punctuation">))</span><span class="token punctuation">{<!-- --></span><span class="token builtin class-name">continue</span><span class="token punctuation">;</span><span class="token punctuation">}</span>                 Map<span class="token operator">&lt;</span>String,String<span class="token operator">&gt;</span> requestHeaderMap<span class="token operator">=</span><span class="token punctuation">(</span>Map<span class="token punctuation">)</span>request.getAttribute<span class="token punctuation">(</span>attrName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>Map.Entry<span class="token operator">&lt;</span>String, String<span class="token operator">&gt;</span> entry<span class="token builtin class-name">:</span> requestHeaderMap.entrySet<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">{<!-- --></span>                     requestTemplate.header<span class="token punctuation">(</span>entry.getKey<span class="token punctuation">(</span><span class="token punctuation">)</span>, entry.getValue<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token builtin class-name">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-71649.htm">附近领养狗狗的地方有哪些（附近有没有免费的狗狗领）</a></p>
                                        <p>下一个：<a href="/news/article-72320.htm">重庆哪里可以领养宠物猫咪（重庆哪里可以领养宠物猫咪的）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-15-node-share-links.htm" title="1月15日|最高速度22.4M/S，2025最新Shadowrocket/SSR/Clash/V2ray免费节点订阅链接地址">1月15日|最高速度22.4M/S，2025最新Shadowrocket/SSR/Clash/V2ray免费节点订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-54766.htm" title="正规领养宠物流程商家会打电话吗（正规领养宠物流程商家会打电话吗）">正规领养宠物流程商家会打电话吗（正规领养宠物流程商家会打电话吗）</a></li>
                        <li class="py-2"><a href="/news/article-53685.htm" title="专业养鱼咨询网（养鱼专家咨询）">专业养鱼咨询网（养鱼专家咨询）</a></li>
                        <li class="py-2"><a href="/news/article-69030.htm" title="全国兽药50强企业名单最新 全国兽药50强企业名单最新消息">全国兽药50强企业名单最新 全国兽药50强企业名单最新消息</a></li>
                        <li class="py-2"><a href="/news/article-48361.htm" title="免费领养狗狗正规网站平台官网有哪些（免费领养狗狗正规网站平台官网有哪些呢）">免费领养狗狗正规网站平台官网有哪些（免费领养狗狗正规网站平台官网有哪些呢）</a></li>
                        <li class="py-2"><a href="/news/article-46005.htm" title="SOLID原则：解释和实例">SOLID原则：解释和实例</a></li>
                        <li class="py-2"><a href="/news/article-71648.htm" title="DeferredResult异步处理spring mvc Demo">DeferredResult异步处理spring mvc Demo</a></li>
                        <li class="py-2"><a href="/news/article-49989.htm" title="如何在MySQL DATEDIFF()函数中使用两位数的年份值？">如何在MySQL DATEDIFF()函数中使用两位数的年份值？</a></li>
                        <li class="py-2"><a href="/news/article-43016.htm" title="南京宠物狗领养中心电话是多少号码（南京宠物领养南京宠物赠送）">南京宠物狗领养中心电话是多少号码（南京宠物领养南京宠物赠送）</a></li>
                        <li class="py-2"><a href="/news/article-47950.htm" title="Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段">Django的原生ORM框架如何支持MongoDB，同时应对客户使用时随时变动字段</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </div>
    <!-- //w3l-content-2-->
        <!-- footer -->
    <footer class="w3l-footer-29-main">
        <!-- copyright -->
        <section class="w3l-copyright">
            <div class="container">
                <div class="row bottom-copies">
                    <p class="col-lg-8 copy-footer-29">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        ClashShare节点分享站 版权所有 Powered by WordPress
                    </p>
                    <div class="col-lg-4 footer-list-29">
                        <ul class="d-flex text-lg-right">
                            <li class="mx-lg-5 mx-md-4 mx-3"><a href="#">Privacy Policy</a></li>
                            <li><a href="#">Contact Us</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            &#10548;
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </footer>
    <!--//footer-->
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/clashshare/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashshare/theme-change.js"></script>
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <script src="/assets/website/js/frontend/clashshare/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>